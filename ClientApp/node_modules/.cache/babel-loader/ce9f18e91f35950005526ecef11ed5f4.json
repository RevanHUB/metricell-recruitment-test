{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RAVE\\\\source\\\\repos\\\\recruitment-test\\\\ClientApp\\\\src\\\\Component\\\\insert.jsx\";\nimport React, { useRef } from 'react';\nexport function InsertForm() {\n  function fetchData(url_api) {\n    return new Promise((resolve, reject) => {\n      let xhttp = window.XMLHttpRequest ? new XMLHttpRequest() : new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n      xhttp.open('GET', url_api, true);\n      xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest', 'Content-Type');\n      xhttp.setRequestHeader('Access-Control-Allow-Origin', '*');\n\n      xhttp.onreadystatechange = function () {\n        if (xhttp.readyState === 4) {\n          xhttp.status === 200 ? resolve(JSON.parse(xhttp.responseText)) : reject(new Error('Error ', url_api));\n        }\n      };\n\n      xhttp.send();\n    });\n  }\n\n  const inputName = useRef(null);\n  const inputValue = useRef(null);\n\n  function insertData(props, props1) {\n    console.log(props);\n    console.log(props1);\n    fetchData('/add/id=' + props1 + '&name=' + props).then(response => {\n      console.log('data added');\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"insertEmployeeName\",\n    placeholder: \"Introduce el nombre\",\n    ref: inputName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"insertEmployeeValue\",\n    placeholder: \"Introduce el valor\",\n    ref: inputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Insertar\",\n    onClick: () => insertData(inputName.current.value, inputValue.current.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }\n  }), \" \")));\n}\nexport default InsertForm;","map":{"version":3,"sources":["C:/Users/RAVE/source/repos/recruitment-test/ClientApp/src/Component/insert.jsx"],"names":["React","useRef","InsertForm","fetchData","url_api","Promise","resolve","reject","xhttp","window","XMLHttpRequest","ActiveXObject","open","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","Error","send","inputName","inputValue","insertData","props","props1","console","log","then","response","current","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,OAAO,SAASC,UAAT,GAAsB;AACzB,WAASC,SAAT,CAAmBC,OAAnB,EAA4B;AACxB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAIC,KAAK,GAAGC,MAAM,CAACC,cAAP,GAAwB,IAAIA,cAAJ,EAAxB,GAA+C,IAAID,MAAM,CAACE,aAAX,CAAyB,mBAAzB,CAA3D;AACAH,MAAAA,KAAK,CAACI,IAAN,CAAW,KAAX,EAAkBR,OAAlB,EAA2B,IAA3B;AACAI,MAAAA,KAAK,CAACK,gBAAN,CAAuB,kBAAvB,EAA2C,gBAA3C,EAA6D,cAA7D;AACAL,MAAAA,KAAK,CAACK,gBAAN,CAAuB,6BAAvB,EAAsD,GAAtD;;AACAL,MAAAA,KAAK,CAACM,kBAAN,GAA2B,YAAY;AACnC,YAAIN,KAAK,CAACO,UAAN,KAAqB,CAAzB,EAA4B;AACvBP,UAAAA,KAAK,CAACQ,MAAN,KAAiB,GAAlB,GACMV,OAAO,CAACW,IAAI,CAACC,KAAL,CAAWV,KAAK,CAACW,YAAjB,CAAD,CADb,GAEMZ,MAAM,CAAC,IAAIa,KAAJ,CAAU,QAAV,EAAoBhB,OAApB,CAAD,CAFZ;AAGH;AACJ,OAND;;AAOAI,MAAAA,KAAK,CAACa,IAAN;AACH,KAbM,CAAP;AAeH;;AACD,QAAMC,SAAS,GAAGrB,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMsB,UAAU,GAAGtB,MAAM,CAAC,IAAD,CAAzB;;AACA,WAASuB,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAvB,IAAAA,SAAS,CAAC,aAAYuB,MAAZ,GAAqB,QAArB,GAA+BD,KAAhC,CAAT,CAAgDI,IAAhD,CAAsDC,QAAD,IAAc;AAC/DH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEH,KAHD;AAIH;;AACD,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,oBAFL;AAGA,IAAA,WAAW,EAAC,qBAHZ;AAIA,IAAA,GAAG,EAAEN,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,MADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAK;AACD,IAAA,IAAI,EAAC,MADJ;AAED,IAAA,IAAI,EAAC,qBAFJ;AAGD,IAAA,WAAW,EAAC,oBAHX;AAID,IAAA,GAAG,EAAEC,UAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,MATJ,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAK;AACD,IAAA,IAAI,EAAC,QADJ;AAED,IAAA,KAAK,EAAC,UAFL;AAGD,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACF,SAAS,CAACS,OAAV,CAAkBC,KAAnB,EAA0BT,UAAU,CAACQ,OAAX,CAAmBC,KAA7C,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,MAlBJ,CADJ,CADJ;AA2BH;AACD,eAAe9B,UAAf","sourcesContent":["import React, { useRef } from 'react';\r\n\r\nexport function InsertForm() {\r\n    function fetchData(url_api) {\r\n        return new Promise((resolve, reject) => {\r\n            let xhttp = window.XMLHttpRequest ? new XMLHttpRequest() : new window.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n            xhttp.open('GET', url_api, true);\r\n            xhttp.setRequestHeader('X-Requested-With', 'XMLHttpRequest', 'Content-Type');\r\n            xhttp.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n            xhttp.onreadystatechange = function () {\r\n                if (xhttp.readyState === 4) {\r\n                    (xhttp.status === 200)\r\n                        ? resolve(JSON.parse(xhttp.responseText))\r\n                        : reject(new Error('Error ', url_api))\r\n                }\r\n            }\r\n            xhttp.send();\r\n        });\r\n\r\n    }\r\n    const inputName = useRef(null);\r\n    const inputValue = useRef(null);\r\n    function insertData(props, props1) {\r\n        console.log(props);\r\n        console.log(props1);\r\n        fetchData('/add/id='+ props1 + '&name='+ props).then((response) => {\r\n            console.log('data added');\r\n           \r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td><input\r\n                    type=\"text\"\r\n                    name=\"insertEmployeeName\"\r\n                    placeholder=\"Introduce el nombre\"\r\n                    ref={inputName}\r\n\r\n\r\n                /> </td>\r\n                <td> <input\r\n                    type=\"text\"\r\n                    name=\"insertEmployeeValue\"\r\n                    placeholder=\"Introduce el valor\"\r\n                    ref={inputValue}\r\n\r\n\r\n\r\n                /> </td>\r\n                <td> <input\r\n                    type=\"submit\"\r\n                    value=\"Insertar\"\r\n                    onClick={() => insertData(inputName.current.value, inputValue.current.value)} /> </td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\nexport default InsertForm;\r\n"]},"metadata":{},"sourceType":"module"}